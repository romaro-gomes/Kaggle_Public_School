library(here)
library(tudyverse)
library(tidyverse)
list.files()
dados=read_csv("Public_Schools.csv")
head(dados)
str(dados)
install.packages("leaflet")
library("leaflet")
here()
install.packages('flexdasboard')
install.packages('flexdashboard')
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
here()
#list.files()
dados=read_csv(here("Public_Schools.csv"))
head(dados)
str(dados)
dados=dados[3:ncol(dados)]
dados
distinct(dados$CITY)
unique(dados$CITY)
unique(dados$CITY) |> count()
unique(dados$CITY) |> length()
library(flexdashboard)
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
dados=read_csv(here("Public_Schools.csv"))
População = sum(dados$POPULATION)
População
colnames(dados)
dados$LEVEL_
list.files()
library(fontawesome)
fontawesome::fa_metadata()
fontawesome::fa_metadata(icon_names)
fontawesome::fa_metadata()
f=fontawesome::fa_metadata()
f$icon_names
f$icon_names
f$icon_names_fas
f$icon_names_fas
f$icon_names_far
f$icon_names_fas
library(flexdashboard)
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
library(fontawesome)
dados=read_csv(here("Public_Schools.csv"))
Cidade = unique(dados$CITY) |> length()
valueBox(Cidade, icon="fa-building")
f$icon_names_fas
f$icon_names
f$icon_names_far |> as.data.frame() |> View()
f$icon_names |> as.data.frame() |> View()
dados |>
group_by(Tipo=LEVEL_) |>
summarise(n=n()) |>
ggplot() +
geom_col(aes(x=Tipo, y=n, fill=Tipo)) +
xlab('Nivel de Ensino') +
ylab('') +
theme(legend.position="none")
colnames(dados)
dados$ZIP
dados$ZIP4
dados$NAICS_CODE
dados$NAICS_DESC
colnames(dados)
dados$DISTRICT_I |> head()
unique(dados$COUNTYFIPS) |> length()
unique(dados$COUNTRY) |> length()
unique(dados$COUNTRY) |> head()
dados |> group_by(Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=COUNTRY)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas')
dados |> group_by(País=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=País)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas')
table(dados$STATUS) %>%
as.data.frame() %>%
treemap("Var1", "Freq", title ="Tipos de Escolas", fontfamily.title = "serif", fontsize.title = 24)
table(dados$ENROLLMENT) %>%
as.data.frame() %>%
treemap("Var1", "Freq", title ="Tipos de Escolas", fontfamily.title = "serif", fontsize.title = 24)
dados$DISTRICT_I |> head()
dados$LEVEL_
dados |> head |> View()
dados |> head() |> View()
table(dados$NAICS_DESC) %>%
as.data.frame() %>%
treemap("Var1", "Freq", title ="Tipos de Escolas", fontfamily.title = "serif", fontsize.title = 24)
ColorBrewer::display.brewer.all()
library(RColorBrewer)
ColorBrewer::display.brewer.all()
RColorBrewer::display.brewer.all()
library(flexdashboard)
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
library(fontawesome)
library(RColorBrewer)
dados=read_csv(here("Public_Schools.csv"))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas')
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=12))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=10))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=8))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
coord_flip() +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.y=element_text(size=8))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.y=element_text(size=8))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=8, angle=45))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=6, angle=45))
library(flexdashboard)
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
library(fontawesome)
library(RColorBrewer)
library(plotly)
library(plotly)
install.packages('plotly')
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=6, angle=45)) |>
ggplotly()
library(flexdashboard)
library(here)
library(tidyverse)
library("leaflet")
library(treemap)
library(fontawesome)
library(RColorBrewer)
library(plotly)
dados=read_csv(here("Public_Schools.csv"))
dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=6, angle=45)) |>
ggplotly()
d = dados |> group_by(Território=COUNTRY,Estado = STATE) |> summarise(Numero=n()) |>
ggplot() +
geom_col(aes(x=reorder(Estado,Numero),y=Numero, fill=Território)) +
xlab('Estado') +
ylab('Numero de Escolas') +
theme(axis.text.x=element_text(size=6, angle=45))
ggplotly(d)
x = reorder(Estado,Numero)
